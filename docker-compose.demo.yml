version: '3.8'

services:
  # Odoo Backend
  odoo-db:
    image: postgres:13
    container_name: demo_odoo_db
    environment:
      - POSTGRES_DB=odoo
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo_password
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes:
      - odoo_db_data:/var/lib/postgresql/data
    networks:
      - demo_network

  odoo:
    image: odoo:18.0
    container_name: demo_odoo_app
    depends_on:
      - odoo-db
    ports:
      - "8069:8069"
    environment:
      - HOST=odoo-db
      - USER=odoo
      - PASSWORD=odoo_password
    volumes:
      - odoo_web_data:/var/lib/odoo
      - ./odoo-addons:/mnt/extra-addons
    command: [
      "odoo",
      "--database=odoo",
      "--db_host=odoo-db",
      "--db_user=odoo",
      "--db_password=odoo_password",
      "--addons-path=/usr/lib/python3/dist-packages/odoo/addons,/mnt/extra-addons",
      "--init=base",
      "--without-demo=False"
    ]
    networks:
      - demo_network

  # Next.js Frontend
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demo_nextjs_app
    ports:
      - "3000:3000"
    environment:
      - ODOO_BASE_URL=http://odoo:8069
      - ODOO_DATABASE=odoo
      - ODOO_USERNAME=admin
      - ODOO_PASSWORD=admin
    depends_on:
      - odoo
    networks:
      - demo_network

volumes:
  odoo_db_data:
  odoo_web_data:

networks:
  demo_network:
    driver: bridge
